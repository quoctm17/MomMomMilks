@page
@model FE.Pages.shopping_cartModel
@{
}
<!DOCTYPE html>
<html lang="zxx">

<head>
    <meta charset="UTF-8">
    <meta name="description" content="Ogani Template">
    <meta name="keywords" content="Ogani, unica, creative, html">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Ogani | Template</title>
</head>

<body>
    <!-- Page Preloder -->
    <div id="preloder">
        <div class="loader"></div>
    </div>
    <!-- Hero Section Begin -->
    <section class="hero hero-normal">
        <div class="container">
            <div class="row">
                <div class="col-lg-3">
                    <div class="hero__categories">
                        <div class="hero__categories__all">
                            <i class="fa fa-bars"></i>
                            <span>All departments</span>
                        </div>
                        <ul>
                            @foreach (var category in Model.Categories)
                            {
                                <li><a href="#">@category.Name</a></li>
                            }
                        </ul>
                    </div>
                </div>
                <div class="col-lg-9">
                    <div class="hero__search">
                        <div class="hero__search__form">
                            <form action="#">
                                <div class="hero__search__categories">
                                    All Categories
                                    <span class="arrow_carrot-down"></span>
                                </div>
                                <input type="text" placeholder="What do you need?">
                                <button type="submit" class="site-btn">SEARCH</button>
                            </form>
                        </div>
                        <div class="hero__search__phone">
                            <div class="hero__search__phone__icon">
                                <i class="fa fa-phone"></i>
                            </div>
                            <div class="hero__search__phone__text">
                                <h5>+65 11.188.888</h5>
                                <span>support 24/7 time</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Hero Section End -->
    <!-- Breadcrumb Section Begin -->
    <section class="breadcrumb-section set-bg" data-setbg="img/breadcrumb.jpg">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 text-center">
                    <div class="breadcrumb__text">
                        <h2>Shopping Cart</h2>
                        <div class="breadcrumb__option">
                            <a href="./index.html">Home</a>
                            <span>Shopping Cart</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Breadcrumb Section End -->
    <!-- Shoping Cart Section Begin -->
    <section class="shoping-cart spad">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="shoping__cart__table">
                        <table>
                            <thead>
                                <tr>
                                    <th class="shoping__product">Image</th>
                                    <th class="shoping__product">Name</th>
                                    <th>Price</th>
                                    <th>Quantity</th>
                                    <th>Total</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody id="cart-items">
                                <!-- Cart items will be dynamically inserted here -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    <div class="shoping__cart__btns">
                        <a href="/" class="primary-btn cart-btn">CONTINUE SHOPPING</a>
                        <a href="#" class="primary-btn cart-btn cart-btn-right" onclick="loadCart()">
                            <span class="icon_loading"></span>
                            Update Cart
                        </a>
                        <a href="#" class="primary-btn cart-btn cart-btn-right" style="margin-left: 10px;" onclick="clearCart()">
                            <span class="icon_trash_alt"></span>
                            Clear Cart
                        </a>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="shoping__continue">
                        <div class="shoping__discount">
                            <h5>Discount Codes</h5>
                            <form action="#">
                                <input type="text" placeholder="Enter your coupon code">
                                <button type="submit" class="site-btn">APPLY COUPON</button>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="shoping__checkout">
                        <h5>Cart Total</h5>
                        <ul>
                            <li>Subtotal <span id="subtotal">0 VND</span></li>
                            <li>Total <span id="total">0 VND</span></li>
                        </ul>
                        <a href="/checkout" class="primary-btn">PROCEED TO CHECKOUT</a>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Shoping Cart Section End -->

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            loadCart();
        });

        async function loadCart() {
            const token = sessionStorage.getItem('token');
            try {
                let response = await fetch('http://localhost:5215/odata/Cart?$expand=Milk', {
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                });
                if (response.ok) {
                    let cart = await response.json();
                    console.log('API response:', cart);

                    let cartItems = cart.$values || [];

                    let cartItemsHtml = cartItems.map(item => `
                <tr>
                    <td class="shopping__cart__item">
                        <img class="shopping__cart__item__image" src="${item.Milk.ImageUrl}" alt="${item.Milk.Name}">
                    </td>
                    <td class="shopping__cart__item">
                        <h5>${item.Milk.Name}</h5>
                    </td>
                    <td class="shopping__cart__price">
                        ${formatCurrency(item.Milk.Price)} đ
                    </td>
                    <td class="shopping__cart__quantity">
                        <div class="quantity">
                            <button class="quantity-btn" onclick="updateQuantity(${item.MilkId}, ${item.Quantity - 1})">-</button>
                            <div class="pro-qty">
                                <input type="text" value="${item.Quantity}" onchange="updateQuantity(${item.MilkId}, this.value)">
                            </div>
                            <button class="quantity-btn" onclick="updateQuantity(${item.MilkId}, ${item.Quantity + 1})">+</button>
                        </div>
                    </td>
                    <td class="shopping__cart__total">
                        ${formatCurrency(item.Milk.Price * item.Quantity)} đ
                    </td>
                    <td class="shopping__cart__item__close">
                        <span class="icon_close" onclick="confirmRemoveFromCart(${item.Id})"></span>
                    </td>
                </tr>
            `).join('');
                    document.getElementById('cart-items').innerHTML = cartItemsHtml;
                    updateCartTotal(cartItems);
                } else {
                    console.error('Failed to fetch cart data.');
                }
            } catch (error) {
                console.error('Error fetching cart data:', error);
            }
        }

        function formatCurrency(amount) {
            return amount.toFixed(0).replace(/\B(?=(\d{3})+(?!\d))/g, ".");
        }

        async function updateQuantity(id, quantity) {
            if (quantity < 1) quantity = 1;
            const token = sessionStorage.getItem('token');
            try {
                let response = await fetch(`http://localhost:5215/odata/Cart/UpdateItem?milkId=${id}&quantity=${quantity}`, {
                    method: 'PUT',
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                });
                if (response.ok) {
                    loadCart();
                    updateCartCount();
                } else {
                    console.error('Failed to update item quantity.');
                }
            } catch (error) {
                console.error('Error updating item quantity:', error);
            }
        }

        function confirmRemoveFromCart(cartItemId) {
            if (confirm("Are you sure you want to remove this item from the cart?")) {
                removeFromCart(cartItemId);
            }
        }

        async function removeFromCart(cartItemId) {
            const token = sessionStorage.getItem('token');
            try {
                let response = await fetch(`http://localhost:5215/odata/Cart/${cartItemId}`, {
                    method: 'DELETE',
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                });
                if (response.ok) {
                    loadCart();
                    updateCartCount();
                } else {
                    console.error('Failed to remove item from cart.');
                }
            } catch (error) {
                console.error('Error removing item from cart:', error);
            }
        }

        async function clearCart() {
            const token = sessionStorage.getItem('token');
            try {
                let response = await fetch('http://localhost:5215/odata/Cart/ClearCart', {
                    method: 'POST',
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                });
                if (response.ok) {
                    loadCart();
                    updateCartCount();
                } else {
                    console.error('Failed to clear cart.');
                }
            } catch (error) {
                console.error('Error clearing cart:', error);
            }
        }

        function updateCartTotal(cartItems) {
            var subtotal = cartItems.reduce((sum, item) => sum + (item.Milk.Price * item.Quantity), 0);
            document.getElementById('subtotal').innerText = `${formatCurrency(subtotal)} đ`;
            document.getElementById('total').innerText = `${formatCurrency(subtotal)} đ`;
        }

        async function updateCartCount() {
            const token = sessionStorage.getItem('token');
            try {
                let response = await fetch('http://localhost:5215/odata/Cart', {
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                });
                if (response.ok) {
                    let cart = await response.json();
                    if (cart.$values) {
                        cart = cart.$values;
                    }
                    let count = cart.reduce((sum, item) => sum + item.Quantity, 0);
                    document.getElementById('cart-count').innerText = count;
                } else {
                    console.error('Failed to fetch cart count.');
                }
            } catch (error) {
                console.error('Error fetching cart count:', error);
            }
        }

    </script>

    <style>
        .quantity {
            display: flex;
            align-items: center;
        }

            .quantity .quantity-btn {
                width: 30px;
                height: 30px;
                background-color: #f3f3f3;
                border: 1px solid #ccc;
                display: flex;
                align-items: center;
                justify-content: center;
                cursor: pointer;
            }

                .quantity .quantity-btn:hover {
                    background-color: #ddd;
                }

        .pro-qty {
            margin: 0 10px;
        }

            .pro-qty input {
                width: 40px;
                text-align: center;
            }

        .shopping__cart__item__image {
            max-width: 100px; /* Adjust this value as needed */
            height: auto;
            padding-right: 20px;
        }

        .shopping__cart__table th,
        .shopping__cart__table td {
            vertical-align: middle;
            text-align: center;
        }

            .shopping__cart__table th:first-child,
            .shopping__cart__table td:first-child {
                width: 120px; /* Adjust this value as needed */
            }

        .shoping__cart__table table thead th.shoping__product {
            text-align: center;
        }

        .shoping__cart__table table {
            width: 100%;
            text-align: left;
        }

        /* Add hover effect and cursor change for the close icon */
        .icon_close {
            cursor: pointer;
        }

            .icon_close:hover {
                color: red;
            }

    </style>

</body>

</html>

